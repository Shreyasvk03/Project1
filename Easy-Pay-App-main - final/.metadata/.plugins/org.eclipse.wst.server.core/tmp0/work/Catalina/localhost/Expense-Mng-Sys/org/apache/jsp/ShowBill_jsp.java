/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.75
 * Generated at: 2023-08-27 11:46:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.cdac.dto.Recharge;
import java.util.List;
import com.cdac.dto.User;

public final class ShowBill_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/Cache-Control.jsp", Long.valueOf(1692100544167L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.cdac.dto.User");
    _jspx_imports_classes.add("com.cdac.dto.Recharge");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    ");

	response.setHeader("Cache-Control", "No-Store");
	response.setHeader("Cache-Control", "No-Cache");

      out.write("\n");
      out.write("    ");
      com.cdac.dto.User user = null;
      synchronized (session) {
        user = (com.cdac.dto.User) _jspx_page_context.getAttribute("user", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (user == null){
          user = new com.cdac.dto.User();
          _jspx_page_context.setAttribute("user", user, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\n');
 
	if(user !=null && user.getUserId()>0){

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    \n");
      out.write("    <meta charset=\"utf-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n");
      out.write("\n");
      out.write("    <!-- Bootstrap CSS -->\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.5.3/dist/css/bootstrap.min.css\" integrity=\"sha384-TX8t27EcRE3e/ihU7zmQxVncDAy5uIKz4rEkgIXeMed4M0jlfIDPvg6uqKI2xXr2\" crossorigin=\"anonymous\">\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"ISO-8859-1\">\n");
      out.write("<title>Show Bills</title>\n");
      out.write("<style>\n");
      out.write("   td,th{\n");
      out.write("      font-size: 27px;\n");
      out.write("  }\n");
      out.write("</style>\n");
      out.write("</head>\n");
      out.write("<body style=\"background-color:aliceblue\">\n");
      out.write("\n");
      out.write("  <h3 style=\"text-align: center;color:brown;font-size: 40px\">See Your Bills !!!</h3>\n");
      out.write("    \n");
      out.write("    <div class= \"container\" style=\"margin-top: 30px;\">\n");
      out.write("	<table class=\"table text-center\">\n");
      out.write("  <thead class=\"thead-dark \">\n");
      out.write("    <tr>\n");
      out.write("      \n");
      out.write("      <th scope=\"col\">Mobile No</th>\n");
      out.write("      \n");
      out.write("     \n");
      out.write("      <th scope=\"col\">Amount Paid</th>\n");
      out.write("      <th scope=\"col\">Delete</th>\n");
      out.write("      \n");
      out.write("  <tbody>\n");
      out.write("  	");
 
		List<Recharge> clist = (List<Recharge>)request.getAttribute("rechList");
		for( Recharge rech : clist){
		
      out.write("\n");
      out.write("  \n");
      out.write("    <tr>  \n");
      out.write("			<td>\n");
      out.write("				");
      out.print( rech.getMobNo());
      out.write("\n");
      out.write("			</td>\n");
      out.write("			\n");
      out.write("			\n");
      out.write("		\n");
      out.write("			<td>\n");
      out.write("				");
      out.print(rech.getAmount() );
      out.write("\n");
      out.write("			</td>\n");
      out.write("			<td>\n");
      out.write("				<a href=\"bill_delete.htm?transactionId=");
      out.print(rech.getTransactionId());
      out.write("\">Delete</a>\n");
      out.write("			</td>\n");
      out.write("			\n");
      out.write("			\n");
      out.write("			\n");
      out.write("		</tr>\n");
      out.write("		");
 } 
      out.write("\n");
      out.write("    \n");
      out.write("  </tbody>\n");
      out.write("</table>\n");
      out.write(" \n");
      out.write("   </div>\n");
      out.write("\n");
      out.write("   <div style=\"text-align: center; color:green; font-size:35px;\">\n");
      out.write("     <a style=\"border: 1px solid black;color:white ;padding: 3px;background-color:tomato;\" href=\"home.jsp\">Back</a>\n");
      out.write("   </div>	\n");
      out.write("  \n");
      out.write("</body>\n");
      out.write("</html>\n");
 }else{
	
	response.sendRedirect("login_form.jsp");	
	
}
	
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
